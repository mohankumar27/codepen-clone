{"version":3,"sources":["components/Editor/Editor.js","hooks/useLocalStorage.js","App.js","index.js"],"names":["Editor","displayName","value","language","onChange","useState","open","setOpen","className","onClick","prevOpen","type","icon","faCompressAlt","faExpandAlt","onBeforeChange","editor","data","options","lineWrapping","lint","mode","theme","lineNumbers","useLocalStorage","key","initialValue","prefixedKey","jsonValue","localStorage","getItem","JSON","parse","setValue","useEffect","setItem","stringify","App","html","setHtml","css","setCss","js","setJs","srcDoc","setSrcDoc","timeout","setTimeout","clearTimeout","title","sandbox","frameBorder","width","height","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8RA6CeA,MAnCf,YAA6D,IAA3CC,EAA0C,EAA1CA,YAAaC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,SAAY,EAClCC,oBAAS,GADyB,mBACnDC,EADmD,KAC7CC,EAD6C,KAO1D,OACE,yBAAKC,UAAS,iBAAYF,EAAO,GAAK,aACpC,yBAAKE,UAAU,iBACZP,EACD,4BACEQ,QAAS,kBAAMF,GAAQ,SAACG,GAAD,OAAeA,MACtCC,KAAK,SACLH,UAAU,2BAEV,kBAAC,IAAD,CAAiBI,KAAMN,EAAOO,IAAgBC,QAGlD,kBAAC,aAAD,CACEC,eAjBgB,SAACC,EAAQC,EAAMf,GACnCE,EAASF,IAiBLA,MAAOA,EACPM,UAAU,8BACVU,QAAS,CACPC,cAAc,EACdC,MAAM,EACNC,KAAMlB,EACNmB,MAAO,WACPC,aAAa,OClCR,SAASC,EAAgBC,EAAKC,GAC3C,IAAMC,EAHO,iBAGgBF,EAD4B,EAG/BpB,oBAAS,WACjC,IAAMuB,EAAYC,aAAaC,QAAQH,GAEvC,OAAkB,OAAdC,EAA2BG,KAAKC,MAAMJ,GAEd,oBAAjBF,EACFA,IAEAA,KAX8C,mBAGlDxB,EAHkD,KAG3C+B,EAH2C,KAmBzD,OAJAC,qBAAU,WACRL,aAAaM,QAAQR,EAAaI,KAAKK,UAAUlC,MAChD,CAACyB,EAAazB,IAEV,CAACA,EAAO+B,GCuCFI,MAzDf,WAAgB,IAAD,EACWb,EAAgB,OAAQ,IADnC,mBACNc,EADM,KACAC,EADA,OAESf,EAAgB,MAAO,IAFhC,mBAENgB,EAFM,KAEDC,EAFC,OAGOjB,EAAgB,KAAM,IAH7B,mBAGNkB,EAHM,KAGFC,EAHE,OAIetC,mBAAS,IAJxB,mBAINuC,EAJM,KAIEC,EAJF,KAqBb,OAfAX,qBAAU,WACR,IAAMY,EAAUC,YAAW,WACzBF,EAAU,mCAAD,OAGCP,EAHD,mCAIEE,EAJF,qCAKGE,EALH,kCAQR,KAEH,OAAO,kBAAMM,aAAaF,MACzB,CAACR,EAAME,EAAKE,IAGb,oCACE,yBAAKlC,UAAU,iBACb,kBAAC,EAAD,CACEL,SAAS,MACTF,YAAY,OACZC,MAAOoC,EACPlC,SAAUmC,IAEZ,kBAAC,EAAD,CACEpC,SAAS,MACTF,YAAY,MACZC,MAAOsC,EACPpC,SAAUqC,IAEZ,kBAAC,EAAD,CACEtC,SAAS,aACTF,YAAY,KACZC,MAAOwC,EACPtC,SAAUuC,KAGd,yBAAKnC,UAAU,QACb,4BACEyC,MAAM,SACNC,QAAQ,gBACRC,YAAY,IACZC,MAAM,OACNC,OAAO,OACPT,OAAQA,OClDlBU,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.ae6b2c44.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"codemirror/lib/codemirror.css\";\r\nimport \"codemirror/theme/material.css\";\r\nimport \"codemirror/mode/xml/xml\";\r\nimport \"codemirror/mode/javascript/javascript\";\r\nimport \"codemirror/mode/css/css\";\r\nimport { Controlled as ControlledEditor } from \"react-codemirror2\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCompressAlt, faExpandAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nfunction Editor({ displayName, value, language, onChange }) {\r\n  const [open, setOpen] = useState(true);\r\n\r\n  const changeHandler = (editor, data, value) => {\r\n    onChange(value);\r\n  };\r\n\r\n  return (\r\n    <div className={`editor ${open ? \"\" : \"collapse\"}`}>\r\n      <div className=\"editor__title\">\r\n        {displayName}\r\n        <button\r\n          onClick={() => setOpen((prevOpen) => !prevOpen)}\r\n          type=\"button\"\r\n          className=\"editor__expand-collapse\"\r\n        >\r\n          <FontAwesomeIcon icon={open ? faCompressAlt : faExpandAlt} />\r\n        </button>\r\n      </div>\r\n      <ControlledEditor\r\n        onBeforeChange={changeHandler}\r\n        value={value}\r\n        className=\"editor__code-mirror-wrapper\"\r\n        options={{\r\n          lineWrapping: true,\r\n          lint: true,\r\n          mode: language,\r\n          theme: \"material\",\r\n          lineNumbers: true,\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Editor;\r\n","import { useEffect, useState } from \"react\";\r\n\r\nconst PREFIX = \"CODEPEN_CLONE_\";\r\n\r\nexport default function useLocalStorage(key, initialValue) {\r\n  const prefixedKey = PREFIX + key;\r\n\r\n  const [value, setValue] = useState(() => {\r\n    const jsonValue = localStorage.getItem(prefixedKey);\r\n\r\n    if (jsonValue !== null) return JSON.parse(jsonValue);\r\n\r\n    if (typeof initialValue === \"function\") {\r\n      return initialValue();\r\n    } else {\r\n      return initialValue;\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(prefixedKey, JSON.stringify(value));\r\n  }, [prefixedKey, value]);\r\n\r\n  return [value, setValue];\r\n}\r\n","import React, { useState, useEffect } from \"react\";\n\nimport Editor from \"./components/Editor/Editor\";\nimport useLocalStorage from \"./hooks/useLocalStorage\";\n\nfunction App() {\n  const [html, setHtml] = useLocalStorage(\"html\", \"\");\n  const [css, setCss] = useLocalStorage(\"css\", \"\");\n  const [js, setJs] = useLocalStorage(\"js\", \"\");\n  const [srcDoc, setSrcDoc] = useState(\"\");\n\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      setSrcDoc(\n        `\n        <html>\n        <body>${html}</body>\n        <style>${css}</style>\n        <script>${js}</script>\n        </html>`\n      );\n    }, 250);\n\n    return () => clearTimeout(timeout);\n  }, [html, css, js]);\n\n  return (\n    <>\n      <div className=\"pane top-pane\">\n        <Editor\n          language=\"xml\"\n          displayName=\"HTML\"\n          value={html}\n          onChange={setHtml}\n        />\n        <Editor\n          language=\"css\"\n          displayName=\"CSS\"\n          value={css}\n          onChange={setCss}\n        />\n        <Editor\n          language=\"javascript\"\n          displayName=\"JS\"\n          value={js}\n          onChange={setJs}\n        />\n      </div>\n      <div className=\"pane\">\n        <iframe\n          title=\"output\"\n          sandbox=\"allow-scripts\"\n          frameBorder=\"0\"\n          width=\"100%\"\n          height=\"100%\"\n          srcDoc={srcDoc}\n        />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}